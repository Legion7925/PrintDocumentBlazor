@layout LoginLayout
@page "/"
@using Microsoft.EntityFrameworkCore;
@using PrintDocument.Core.Entities;
@using PrintDocument.Core.Helper;
@using PrintDocument.Core.Models;
@using PrintDocument.Core;
@using System.Security.Cryptography;
@using System.Text;

<MudRTLProvider RightToLeft="true">
    <MudTabs @ref="tabs" Elevation="4" Style="max-width:400px;margin:0 auto;margin-top:12%;" Rounded="true" Centered="true" Color="@Color.Primary">
        <MudTabPanel Text="ورود">
            <MudCard Class="card" Elevation="4">
                <MudCardContent>
                    <MudTextField Class="my-5" @bind-Value="loginModel.UsernameOrPhoneNumber" Label="نام کاربری یا شماره موبایل" Variant="Variant.Text"
                                  Required="true" RequiredError="نام کاربری یا شماره موبایل نمیتواند خالی باشد"/>

                    <MudTextField Class="my-5" @bind-Value="loginModel.Password" InputType="InputType.Password" Label="کلمه عبور" Variant="Variant.Text"
                                  Required="true" RequiredError="کلمه عبور نمیتواند خالی باشد" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mx-auto" EndIcon="@Icons.Material.Filled.Login"
                    @onclick="LoginUser">ورود</MudButton>
                </MudCardActions>
                    <MudLink Class="mr-auto ml-2 my-2 cursor-pointer" OnClick="NavigateToForgetPasswordPage">فراموشی کلمه عبور؟</MudLink>
            </MudCard>
        </MudTabPanel>
        <MudTabPanel Text="ثبت نام">
            <MudCard Class="card" Elevation="4">
                <MudCardContent>

                    <MudTextField Class="my-5" Required="true" @bind-Value="registerModel.NameAndFamily" Label="نام و نام خانوادگی"
                                  Variant="Variant.Text" RequiredError="نام و نام خوانواندگی نمیتواند خالی باشد" />

                    <MudTextField Class="my-5" @bind-Value="registerModel.Username" Label="نام کاربری"
                                  Variant="Variant.Text" Required="true" RequiredError="نام کاربری نمیتواند خالی باشد" />

                    <MudTextField Class="my-5" @bind-Value="registerModel.PhoneNumber" Label="شماره موبایل" Variant="Variant.Text"
                                  Required="true" RequiredError="شماره تلفن نمیتواند خالی باشد" />
                    <MudTextField Class="my-5" @bind-Value="registerModel.Password" InputType="InputType.Password" Label="کلمه عبور" Variant="Variant.Text"
                                  Required="true" RequiredError="کلمه عبور نمیتواند خالی باشد" />
                    <MudTextField Class="my-5" @bind-Value="registerModel.ConfirmPassword" InputType="InputType.Password" Label="تایید کلمه عبور"
                                  Variant="Variant.Text" Required="true" RequiredError="کلمه عبور نمیتواند خالی باشد" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mx-auto" @onclick="RegisterUser">ثبت نام</MudButton>
                </MudCardActions>
            </MudCard>
        </MudTabPanel>

    </MudTabs>
</MudRTLProvider>

@code {
    [Inject]
    public PrintContext context { get; set; } = default!;

    [Inject]
    private ISnackbar Snackbar { get; set; } = default!;

    [Inject]
    public NavigationManager NavManager { get; set; } = default!;

    private MudTabs tabs = new();

    private UserLoginModel loginModel = new();

    private UserRegisterModel registerModel = new();

    private async Task RegisterUser()
    {
        var userExist = context.Users.Any(u => u.Username == registerModel.Username);
        if (userExist is true)
        {
            Snackbar.Add("نام کاربری فوق قبلا ثبت شده است", Severity.Warning);
            return;
        }

        if (string.IsNullOrEmpty(registerModel.Username) ||
        string.IsNullOrEmpty(registerModel.NameAndFamily) ||
        string.IsNullOrEmpty(registerModel.Password) ||
        string.IsNullOrEmpty(registerModel.PhoneNumber) ||
        string.IsNullOrEmpty(registerModel.ConfirmPassword))
        {
            Snackbar.Add("لطفا همه ی فیلد ها را پر کنید", Severity.Warning);
            return;
        }

        if (registerModel.Password != registerModel.ConfirmPassword)
        {
            Snackbar.Add("کلمه های عبور با یکدیگر همخوانی ندارند", Severity.Warning);
            return;
        }

        await context.Users.AddAsync(new User
            {
                NameAndFamily = registerModel.NameAndFamily,
                PasswordHash = PasswordHasher.HashPassword(registerModel.Password),
                Username = registerModel.Username,
                PhoneNumber = registerModel.PhoneNumber
            });
        await context.SaveChangesAsync();

        registerModel = new();
        Snackbar.Add("ثبت نام شما با موفقیت انجام شد اکنون میتوانید وارد نرم افزار شوید", Severity.Success);
        tabs.ActivatePanel(0);
        StateHasChanged();

    }

    private async Task LoginUser()
    {
        if (string.IsNullOrEmpty(loginModel.UsernameOrPhoneNumber) ||
            string.IsNullOrEmpty(loginModel.Password))
        {
            Snackbar.Add("لطفا همه ی فیلد ها را پر کنید", Severity.Warning);
            return;
        }

        var userExist = await context.Users.AnyAsync(i => i.Username == loginModel.UsernameOrPhoneNumber
            && i.PasswordHash == PasswordHasher.HashPassword(loginModel.Password)
            || i.PhoneNumber == loginModel.UsernameOrPhoneNumber
            && i.PasswordHash == PasswordHasher.HashPassword(loginModel.Password));

        if (userExist)
            NavManager.NavigateTo("/Home");
        else
            Snackbar.Add("نام کاربری یا کلمه عبور یا شماره موبایل نادرست است", Severity.Warning);
    }

    private void NavigateToForgetPasswordPage()
    {
        NavManager.NavigateTo("/ForgotPassword");
    }
}
